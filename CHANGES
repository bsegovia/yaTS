yaTS 1.0.3
- Added a global way to yield and wake up threads. There is now a global
  bitfield monitoring the threads currently sleeping. When a task is pushed, a
  thread is waken up
- Added a task profiler that can register anything
- Added some tasking utility that allows to have multiple start and end
  dependencies
- Added routines to completely lock / unlock the tasking system

yaTS 1.0.2
- Changed priority order. Now affinity and work stealing queue priorities are
  interleaved
- Implemented a clean and reactive way to yield threads when there is nothing
  to do
- Added proper load_acquire and store_release semantics
- Fixed a completely uber-stupid race condition in the code. Should be cool for
  me to learn how to use atomic and volatile variables... What a shame.

yaTS 1.0.1
- Fixed a possible race condition in the debug code
- Fixed a very stupid performance bug which leads the thread to sleep all the
  time when there is no worker threads...
- Renamed TaskScheduler::threadNum into TaskScheduler::workerNum. This is less
  confusing

yaTS 1.0.0
Initial release

